{"query": "initCacheFromFile enter...", "answer": "initCacheFromFile enter..."}
{"query": "onStartCommand Intent { cmp=com.huawei.health/.manager.DaemonService }", "answer": "onStartCommand Intent { cmp={variables} }"}
{"query": "getMidWareCache mRemote=com.huawei.health.c.c@d990a94", "answer": "getMidWareCache mRemote={variables}"}
{"query": "initDataManager enter...", "answer": "initDataManager enter..."}
{"query": "start compare with midware counter", "answer": "start compare with midware counter"}
{"query": "saveHealthDetailData() deviceID = 2,clientID=1,id=1", "answer": "saveHealthDetailData() deviceID = {variables},clientID={variables},id={variables}"}
{"query": "isScreenOn false", "answer": "isScreenOn {variables}"}
{"query": "MyServiceConn connect 1.0.0.0", "answer": "MyServiceConn connect {variables}"}
{"query": "getFirstStartDaemonFromUI: true", "answer": "getFirstStartDaemonFromUI: {variables}"}
{"query": "Alarm uploadStaticsToDB totalSteps=9992Calories:214007Floor:120Distance:7133", "answer": "Alarm uploadStaticsToDB totalSteps={variables}"}
{"query": "getStepCounterStatus= true", "answer": "getStepCounterStatus= {variables}"}
{"query": "saveRealTimeHealthDatasStat() size = 1,totalTime = 28", "answer": "saveRealTimeHealthDatasStat() size = {variables},totalTime = {variables}"}
{"query": "startInsertSportSync first 500 steps sync,do all sync", "answer": "startInsertSportSync first {variables} steps sync,do all sync"}
{"query": "getTodayNoSyncTotalValue datas is null or empty", "answer": "{variables} datas is null or empty"}
{"query": "uploadStaticsToDB failed message=true", "answer": "uploadStaticsToDB failed message={variables}"}
{"query": "getDeviceShutDownTime shutDownTime=0", "answer": "getDeviceShutDownTime shutDownTime={variables}"}
{"query": "setBasicStandardSteps basicStandardStep=3786 restartSteps=0", "answer": "setBasicStandardSteps basicStandardStep={variables} restartSteps={variables}"}
{"query": "getDeviceShutDownBoolean shutDown=false", "answer": "getDeviceShutDownBoolean shutDown={variables}"}
{"query": "flush sensor data", "answer": "flush sensor data"}
{"query": "flushTempCacheToDB by stand", "answer": "flushTempCacheToDB by {variables}"}
{"query": "initUserPrivacy the userPrivacy switch is open, start push user data!", "answer": "initUserPrivacy the userPrivacy switch is {variables}, start push user data!"}
{"query": "insertHiHealthData() end totalTime = 36", "answer": "insertHiHealthData() end totalTime = {variables}"}
{"query": "getCfgFile enter...", "answer": "getCfgFile enter..."}
{"query": "getBinderPackageName packageName = com.huawei.health", "answer": "getBinderPackageName packageName = {variables}"}
{"query": "setGoalNotificationShowStatus=true", "answer": "setGoalNotificationShowStatus={variables}"}
{"query": "rebuild notification", "answer": "rebuild notification"}
{"query": "registersensorsuccess: true", "answer": "registersensorsuccess: {variables}"}
{"query": "saveStatData() type =40004,time = 1514044800000,statClient = 2,who is 1", "answer": "saveStatData() type ={variables},time = {variables},statClient = {variables},who is {variables}"}
{"query": "insertHiHealthData() size = 18,app = 1,One Data Type = 2,packageName = com.huawei.health,writeStatType = 0", "answer": "insertHiHealthData() size = {variables},app = {variables},One Data Type = {variables},packageName = {variables},writeStatType = {variables}"}
{"query": "flushTempCacheToDB by ext", "answer": "flushTempCacheToDB by {variables}"}
{"query": "checkInsertStatus stepSum or calorieSum is enough", "answer": "checkInsertStatus stepSum or calorieSum is enough"}
{"query": "getStringHuid() who is com.huawei.health", "answer": "getStringHuid() who is {variables}"}
